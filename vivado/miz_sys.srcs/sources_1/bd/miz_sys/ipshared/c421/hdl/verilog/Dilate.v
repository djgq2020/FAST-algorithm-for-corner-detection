// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Dilate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rows,
        cols,
        mask_data_stream_0_s_dout,
        mask_data_stream_0_s_empty_n,
        mask_data_stream_0_s_read,
        dmask_data_stream_0_din,
        dmask_data_stream_0_full_n,
        dmask_data_stream_0_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] rows;
input  [31:0] cols;
input  [7:0] mask_data_stream_0_s_dout;
input   mask_data_stream_0_s_empty_n;
output   mask_data_stream_0_s_read;
output  [7:0] dmask_data_stream_0_din;
input   dmask_data_stream_0_full_n;
output   dmask_data_stream_0_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mask_data_stream_0_s_read;
reg dmask_data_stream_0_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mask_data_stream_0_s_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i_i_i_i_reg_1196;
reg   [0:0] icmp_reg_1152;
reg   [0:0] tmp_20_i_reg_1143;
reg    dmask_data_stream_0_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] or_cond_i_i_i_reg_1232;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232;
reg   [10:0] t_V_5_reg_285;
wire   [10:0] stop_row_fu_296_p1;
reg    ap_block_state1;
wire   [11:0] len_assign_5_cast1_i_fu_304_p1;
wire   [11:0] cols_assign_cast_i_fu_308_p1;
wire   [10:0] tmp_i_fu_312_p2;
wire   [10:0] tmp_17_i_fu_318_p2;
wire   [10:0] tmp_18_i_fu_328_p2;
wire   [10:0] p_neg393_i_i_i_fu_338_p2;
wire   [1:0] tmp_i_74_fu_344_p2;
wire   [1:0] tmp_37_i_fu_350_p2;
wire   [0:0] exitcond389_i_i_i_fu_360_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_365_p2;
reg   [10:0] i_V_reg_1138;
wire   [0:0] tmp_20_i_fu_371_p2;
wire   [0:0] tmp_147_not_i_fu_376_p2;
reg   [0:0] tmp_147_not_i_reg_1147;
wire   [0:0] icmp_fu_392_p2;
wire   [0:0] tmp_22_i_fu_398_p2;
reg   [0:0] tmp_22_i_reg_1157;
wire   [0:0] tmp_177_2_i_fu_404_p2;
reg   [0:0] tmp_177_2_i_reg_1161;
wire   [0:0] tmp_23_i_fu_410_p2;
reg   [0:0] tmp_23_i_reg_1165;
wire   [1:0] tmp_32_fu_562_p1;
reg   [1:0] tmp_32_reg_1172;
wire   [1:0] row_assign_7_1_t_i_fu_587_p2;
reg   [1:0] row_assign_7_1_t_i_reg_1177;
wire   [1:0] row_assign_7_2_t_i_fu_613_p2;
reg   [1:0] row_assign_7_2_t_i_reg_1182;
wire   [0:0] exitcond388_i_i_i_fu_622_p2;
reg   [0:0] exitcond388_i_i_i_reg_1187;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op142_read_state4;
reg    ap_predicate_op150_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_i_i_reg_1187;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_i_i_reg_1187;
wire   [10:0] j_V_fu_627_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_i_fu_680_p2;
wire   [0:0] brmerge_i_fu_713_p2;
reg   [0:0] brmerge_i_reg_1200;
reg   [10:0] k_buf_0_val_3_addr_reg_1207;
wire   [1:0] col_assign_1_t_i_fu_725_p2;
reg   [1:0] col_assign_1_t_i_reg_1213;
reg   [10:0] k_buf_0_val_4_addr_reg_1220;
reg   [10:0] k_buf_0_val_5_addr_reg_1226;
wire   [0:0] or_cond_i_i_i_fu_730_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_i_reg_1232;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_i_i_reg_1232;
wire   [7:0] src_kernel_win_0_va_6_fu_824_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1236;
reg   [7:0] ap_reg_pp0_iter2_src_kernel_win_0_va_6_reg_1236;
wire   [7:0] src_kernel_win_0_va_7_fu_842_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1243;
wire   [7:0] src_kernel_win_0_va_8_fu_860_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1250;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_879_p3;
reg   [7:0] temp_0_i_i_i_059_i_s_reg_1255;
wire   [0:0] tmp_223_0_2_i_fu_887_p2;
reg   [0:0] tmp_223_0_2_i_reg_1260;
wire   [7:0] temp_0_i_i_i_059_i_4_fu_950_p3;
reg   [7:0] temp_0_i_i_i_059_i_4_reg_1265;
wire   [7:0] tmp_39_fu_1006_p3;
reg   [7:0] tmp_39_reg_1271;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_274;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_33_i_fu_718_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_154;
reg   [7:0] src_kernel_win_0_va_1_fu_158;
reg   [7:0] src_kernel_win_0_va_2_fu_162;
reg   [7:0] src_kernel_win_0_va_3_fu_166;
reg   [7:0] src_kernel_win_0_va_4_fu_170;
reg   [7:0] src_kernel_win_0_va_5_fu_174;
reg   [7:0] right_border_buf_0_s_fu_178;
wire   [7:0] col_buf_0_val_0_0_fu_755_p3;
reg   [7:0] right_border_buf_0_1_fu_182;
wire   [7:0] col_buf_0_val_2_0_fu_791_p3;
reg   [7:0] right_border_buf_0_2_fu_186;
wire   [7:0] col_buf_0_val_1_0_fu_773_p3;
wire   [10:0] cols_3_fu_300_p1;
wire   [1:0] tmp_23_fu_334_p1;
wire   [1:0] tmp_fu_324_p1;
wire   [9:0] tmp_24_fu_382_p4;
wire   [11:0] t_V_cast_i_fu_356_p1;
wire   [11:0] tmp_24_i_fu_415_p2;
wire   [0:0] tmp_25_fu_427_p3;
wire   [0:0] tmp_26_i_fu_441_p2;
wire   [0:0] rev_fu_435_p2;
wire   [0:0] tmp_26_fu_452_p3;
wire   [11:0] p_assign_4_1_i_fu_471_p2;
wire   [0:0] tmp_28_fu_477_p3;
wire   [0:0] tmp_204_1_i_fu_491_p2;
wire   [0:0] rev8_fu_485_p2;
wire   [11:0] p_assign_4_2_i_fu_510_p2;
wire   [0:0] tmp_30_fu_516_p3;
wire   [0:0] tmp_204_2_i_fu_530_p2;
wire   [0:0] rev1_fu_524_p2;
wire   [0:0] or_cond_i423_i_i_i_fu_446_p2;
wire   [10:0] tmp_26_cast_i_fu_421_p2;
wire   [10:0] p_assign_5_i_fu_460_p3;
wire   [10:0] y_1_i_fu_549_p3;
wire   [10:0] row_assign_7_i_fu_557_p2;
wire   [1:0] tmp_27_fu_467_p1;
wire   [0:0] tmp_29_fu_502_p3;
wire   [0:0] or_cond_i423_i_i_1_i_fu_496_p2;
wire   [1:0] tmp_39_i_fu_566_p2;
wire   [1:0] tmp_40_i_fu_572_p3;
wire   [1:0] tmp_43_i_fu_579_p3;
wire   [0:0] tmp_31_fu_541_p3;
wire   [0:0] or_cond_i423_i_i_2_i_fu_535_p2;
wire   [1:0] tmp_47_i_fu_592_p2;
wire   [1:0] tmp_48_i_fu_598_p3;
wire   [1:0] tmp_49_i_fu_605_p3;
wire   [9:0] tmp_33_fu_633_p4;
wire   [11:0] t_V_5_cast_i_fu_618_p1;
wire   [11:0] ImagLoc_x_fu_649_p2;
wire   [0:0] tmp_34_fu_661_p3;
wire   [0:0] tmp_31_i_fu_675_p2;
wire   [0:0] rev2_fu_669_p2;
wire   [0:0] tmp_35_fu_686_p3;
wire   [10:0] ImagLoc_x_cast_i_fu_655_p2;
wire   [10:0] p_assign_1_i_fu_694_p3;
wire   [10:0] x_fu_701_p3;
wire   [1:0] tmp_36_fu_709_p1;
wire   [0:0] icmp1_fu_643_p2;
wire   [7:0] tmp_42_i_fu_744_p5;
wire   [7:0] tmp_44_i_fu_762_p5;
wire   [7:0] tmp_45_i_fu_780_p5;
wire   [7:0] tmp_46_i_fu_813_p5;
wire   [7:0] tmp_50_i_fu_831_p5;
wire   [7:0] tmp_51_i_fu_849_p5;
wire   [0:0] tmp_223_0_1_i_fu_873_p2;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_912_p3;
wire   [0:0] tmp_223_1_i_fu_917_p2;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_923_p3;
wire   [0:0] tmp_223_1_1_i_fu_931_p2;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_937_p3;
wire   [0:0] tmp_223_1_2_i_fu_945_p2;
wire   [0:0] tmp_223_2_i_fu_975_p2;
wire   [7:0] temp_0_i_i_i_059_i_5_fu_980_p3;
wire   [0:0] tmp_223_2_1_i_fu_987_p2;
wire   [7:0] temp_0_i_i_i_059_i_6_fu_993_p3;
wire   [0:0] tmp_223_2_2_i_fu_1001_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_335;
reg    ap_condition_49;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1207),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(mask_data_stream_0_s_dout)
);

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1220),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1226),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U48(
    .din0(right_border_buf_0_s_fu_178),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1213),
    .dout(tmp_42_i_fu_744_p5)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U49(
    .din0(right_border_buf_0_2_fu_186),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1213),
    .dout(tmp_44_i_fu_762_p5)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U50(
    .din0(right_border_buf_0_1_fu_182),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_i_reg_1213),
    .dout(tmp_45_i_fu_780_p5)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U51(
    .din0(col_buf_0_val_0_0_fu_755_p3),
    .din1(col_buf_0_val_1_0_fu_773_p3),
    .din2(col_buf_0_val_2_0_fu_791_p3),
    .din3(tmp_32_reg_1172),
    .dout(tmp_46_i_fu_813_p5)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U52(
    .din0(col_buf_0_val_0_0_fu_755_p3),
    .din1(col_buf_0_val_1_0_fu_773_p3),
    .din2(col_buf_0_val_2_0_fu_791_p3),
    .din3(row_assign_7_1_t_i_reg_1177),
    .dout(tmp_50_i_fu_831_p5)
);

hls_fast_corner_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
hls_fast_corner_mpcA_U53(
    .din0(col_buf_0_val_0_0_fu_755_p3),
    .din1(col_buf_0_val_1_0_fu_773_p3),
    .din2(col_buf_0_val_2_0_fu_791_p3),
    .din3(row_assign_7_2_t_i_reg_1182),
    .dout(tmp_51_i_fu_849_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_i_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_i_i_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond389_i_i_i_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_5_reg_285 <= j_V_fu_627_p2;
    end else if (((exitcond389_i_i_i_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_5_reg_285 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_274 <= i_V_reg_1138;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond388_i_i_i_reg_1187 <= exitcond388_i_i_i_reg_1187;
        ap_reg_pp0_iter1_or_cond_i_i_i_reg_1232 <= or_cond_i_i_i_reg_1232;
        exitcond388_i_i_i_reg_1187 <= exitcond388_i_i_i_fu_622_p2;
        src_kernel_win_0_va_6_reg_1236 <= src_kernel_win_0_va_6_fu_824_p3;
        src_kernel_win_0_va_7_reg_1243 <= src_kernel_win_0_va_7_fu_842_p3;
        src_kernel_win_0_va_8_reg_1250 <= src_kernel_win_0_va_8_fu_860_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond388_i_i_i_reg_1187 <= ap_reg_pp0_iter1_exitcond388_i_i_i_reg_1187;
        ap_reg_pp0_iter2_or_cond_i_i_i_reg_1232 <= ap_reg_pp0_iter1_or_cond_i_i_i_reg_1232;
        ap_reg_pp0_iter2_src_kernel_win_0_va_6_reg_1236 <= src_kernel_win_0_va_6_reg_1236;
        ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 <= ap_reg_pp0_iter2_or_cond_i_i_i_reg_1232;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_1200 <= brmerge_i_fu_713_p2;
        col_assign_1_t_i_reg_1213 <= col_assign_1_t_i_fu_725_p2;
        k_buf_0_val_3_addr_reg_1207 <= tmp_33_i_fu_718_p1;
        k_buf_0_val_4_addr_reg_1220 <= tmp_33_i_fu_718_p1;
        k_buf_0_val_5_addr_reg_1226 <= tmp_33_i_fu_718_p1;
        or_cond_i_i_i_i_reg_1196 <= or_cond_i_i_i_i_fu_680_p2;
        or_cond_i_i_i_reg_1232 <= or_cond_i_i_i_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1138 <= i_V_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_i_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1152 <= icmp_fu_392_p2;
        row_assign_7_1_t_i_reg_1177 <= row_assign_7_1_t_i_fu_587_p2;
        row_assign_7_2_t_i_reg_1182 <= row_assign_7_2_t_i_fu_613_p2;
        tmp_147_not_i_reg_1147 <= tmp_147_not_i_fu_376_p2;
        tmp_177_2_i_reg_1161 <= tmp_177_2_i_fu_404_p2;
        tmp_20_i_reg_1143 <= tmp_20_i_fu_371_p2;
        tmp_22_i_reg_1157 <= tmp_22_i_fu_398_p2;
        tmp_23_i_reg_1165 <= tmp_23_i_fu_410_p2;
        tmp_32_reg_1172 <= tmp_32_fu_562_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_182 <= col_buf_0_val_2_0_fu_791_p3;
        right_border_buf_0_2_fu_186 <= col_buf_0_val_1_0_fu_773_p3;
        right_border_buf_0_s_fu_178 <= col_buf_0_val_0_0_fu_755_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_i_i_reg_1187 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_158 <= src_kernel_win_0_va_fu_154;
        src_kernel_win_0_va_fu_154 <= ap_reg_pp0_iter2_src_kernel_win_0_va_6_reg_1236;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_i_i_reg_1187 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_162 <= src_kernel_win_0_va_7_reg_1243;
        src_kernel_win_0_va_3_fu_166 <= src_kernel_win_0_va_2_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_reg_1187 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_170 <= src_kernel_win_0_va_8_fu_860_p3;
        src_kernel_win_0_va_5_fu_174 <= src_kernel_win_0_va_4_fu_170;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_or_cond_i_i_i_reg_1232 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_4_reg_1265 <= temp_0_i_i_i_059_i_4_fu_950_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1232 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_s_reg_1255 <= temp_0_i_i_i_059_i_s_fu_879_p3;
        tmp_223_0_2_i_reg_1260 <= tmp_223_0_2_i_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_i_i_reg_1232 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_39_reg_1271 <= tmp_39_fu_1006_p3;
    end
end

always @ (*) begin
    if ((exitcond388_i_i_i_fu_622_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        dmask_data_stream_0_blk_n = dmask_data_stream_0_full_n;
    end else begin
        dmask_data_stream_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dmask_data_stream_0_write = 1'b1;
    end else begin
        dmask_data_stream_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_177_2_i_reg_1161 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_177_2_i_reg_1161 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_22_i_reg_1157 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_49)) begin
        if ((ap_predicate_op150_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_335)) begin
            k_buf_0_val_4_d1 = mask_data_stream_0_s_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_22_i_reg_1157 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_22_i_reg_1157 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_49)) begin
        if ((ap_predicate_op150_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_335)) begin
            k_buf_0_val_5_d1 = mask_data_stream_0_s_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_1152 == 1'd0) & (tmp_22_i_reg_1157 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_20_i_reg_1143 == 1'd1) & (icmp_reg_1152 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_reg_1152 == 1'd0) & (or_cond_i_i_i_i_reg_1196 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mask_data_stream_0_s_blk_n = mask_data_stream_0_s_empty_n;
    end else begin
        mask_data_stream_0_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op150_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op142_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mask_data_stream_0_s_read = 1'b1;
    end else begin
        mask_data_stream_0_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_i_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond388_i_i_i_fu_622_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond388_i_i_i_fu_622_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_i_fu_655_p2 = ($signed(11'd2047) + $signed(t_V_5_reg_285));

assign ImagLoc_x_fu_649_p2 = ($signed(12'd4095) + $signed(t_V_5_cast_i_fu_618_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (dmask_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op150_read_state4 == 1'b1)) | ((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op142_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (dmask_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op150_read_state4 == 1'b1)) | ((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op142_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (dmask_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op150_read_state4 == 1'b1)) | ((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op142_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op150_read_state4 == 1'b1)) | ((mask_data_stream_0_s_empty_n == 1'b0) & (ap_predicate_op142_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((ap_reg_pp0_iter3_or_cond_i_i_i_reg_1232 == 1'd1) & (dmask_data_stream_0_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_335 = ((icmp_reg_1152 == 1'd0) & (tmp_22_i_reg_1157 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1));
end

always @ (*) begin
    ap_condition_49 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op142_read_state4 = ((icmp_reg_1152 == 1'd0) & (or_cond_i_i_i_i_reg_1196 == 1'd1));
end

always @ (*) begin
    ap_predicate_op150_read_state4 = ((tmp_20_i_reg_1143 == 1'd1) & (icmp_reg_1152 == 1'd1) & (or_cond_i_i_i_i_reg_1196 == 1'd1));
end

assign brmerge_i_fu_713_p2 = (tmp_31_i_fu_675_p2 | tmp_147_not_i_reg_1147);

assign col_assign_1_t_i_fu_725_p2 = (tmp_37_i_fu_350_p2 - tmp_36_fu_709_p1);

assign col_buf_0_val_0_0_fu_755_p3 = ((brmerge_i_reg_1200[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_42_i_fu_744_p5);

assign col_buf_0_val_1_0_fu_773_p3 = ((brmerge_i_reg_1200[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_44_i_fu_762_p5);

assign col_buf_0_val_2_0_fu_791_p3 = ((brmerge_i_reg_1200[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_45_i_fu_780_p5);

assign cols_3_fu_300_p1 = cols[10:0];

assign cols_assign_cast_i_fu_308_p1 = cols_3_fu_300_p1;

assign dmask_data_stream_0_din = tmp_39_reg_1271;

assign exitcond388_i_i_i_fu_622_p2 = ((t_V_5_reg_285 == tmp_i_fu_312_p2) ? 1'b1 : 1'b0);

assign exitcond389_i_i_i_fu_360_p2 = ((t_V_reg_274 == tmp_17_i_fu_318_p2) ? 1'b1 : 1'b0);

assign i_V_fu_365_p2 = (t_V_reg_274 + 11'd1);

assign icmp1_fu_643_p2 = ((tmp_33_fu_633_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_392_p2 = ((tmp_24_fu_382_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_V_fu_627_p2 = (t_V_5_reg_285 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_33_i_fu_718_p1;

assign k_buf_0_val_4_address0 = tmp_33_i_fu_718_p1;

assign k_buf_0_val_5_address0 = tmp_33_i_fu_718_p1;

assign len_assign_5_cast1_i_fu_304_p1 = stop_row_fu_296_p1;

assign or_cond_i423_i_i_1_i_fu_496_p2 = (tmp_204_1_i_fu_491_p2 & rev8_fu_485_p2);

assign or_cond_i423_i_i_2_i_fu_535_p2 = (tmp_204_2_i_fu_530_p2 & rev1_fu_524_p2);

assign or_cond_i423_i_i_i_fu_446_p2 = (tmp_26_i_fu_441_p2 & rev_fu_435_p2);

assign or_cond_i_i_i_fu_730_p2 = (icmp_reg_1152 & icmp1_fu_643_p2);

assign or_cond_i_i_i_i_fu_680_p2 = (tmp_31_i_fu_675_p2 & rev2_fu_669_p2);

assign p_assign_1_i_fu_694_p3 = ((tmp_35_fu_686_p3[0:0] === 1'b1) ? 11'd0 : tmp_18_i_fu_328_p2);

assign p_assign_4_1_i_fu_471_p2 = ($signed(12'd4094) + $signed(t_V_cast_i_fu_356_p1));

assign p_assign_4_2_i_fu_510_p2 = ($signed(12'd4093) + $signed(t_V_cast_i_fu_356_p1));

assign p_assign_5_i_fu_460_p3 = ((tmp_26_fu_452_p3[0:0] === 1'b1) ? 11'd0 : p_neg393_i_i_i_fu_338_p2);

assign p_neg393_i_i_i_fu_338_p2 = ($signed(11'd2047) + $signed(stop_row_fu_296_p1));

assign rev1_fu_524_p2 = (tmp_30_fu_516_p3 ^ 1'd1);

assign rev2_fu_669_p2 = (tmp_34_fu_661_p3 ^ 1'd1);

assign rev8_fu_485_p2 = (tmp_28_fu_477_p3 ^ 1'd1);

assign rev_fu_435_p2 = (tmp_25_fu_427_p3 ^ 1'd1);

assign row_assign_7_1_t_i_fu_587_p2 = (tmp_i_74_fu_344_p2 - tmp_43_i_fu_579_p3);

assign row_assign_7_2_t_i_fu_613_p2 = (tmp_i_74_fu_344_p2 - tmp_49_i_fu_605_p3);

assign row_assign_7_i_fu_557_p2 = (p_neg393_i_i_i_fu_338_p2 - y_1_i_fu_549_p3);

assign src_kernel_win_0_va_6_fu_824_p3 = ((tmp_23_i_reg_1165[0:0] === 1'b1) ? tmp_46_i_fu_813_p5 : col_buf_0_val_0_0_fu_755_p3);

assign src_kernel_win_0_va_7_fu_842_p3 = ((tmp_23_i_reg_1165[0:0] === 1'b1) ? tmp_50_i_fu_831_p5 : col_buf_0_val_1_0_fu_773_p3);

assign src_kernel_win_0_va_8_fu_860_p3 = ((tmp_23_i_reg_1165[0:0] === 1'b1) ? tmp_51_i_fu_849_p5 : col_buf_0_val_2_0_fu_791_p3);

assign stop_row_fu_296_p1 = rows[10:0];

assign t_V_5_cast_i_fu_618_p1 = t_V_5_reg_285;

assign t_V_cast_i_fu_356_p1 = t_V_reg_274;

assign temp_0_i_i_i_059_i_1_fu_912_p3 = ((tmp_223_0_2_i_reg_1260[0:0] === 1'b1) ? src_kernel_win_0_va_8_reg_1250 : temp_0_i_i_i_059_i_s_reg_1255);

assign temp_0_i_i_i_059_i_2_fu_923_p3 = ((tmp_223_1_i_fu_917_p2[0:0] === 1'b1) ? src_kernel_win_0_va_3_fu_166 : temp_0_i_i_i_059_i_1_fu_912_p3);

assign temp_0_i_i_i_059_i_3_fu_937_p3 = ((tmp_223_1_1_i_fu_931_p2[0:0] === 1'b1) ? src_kernel_win_0_va_2_fu_162 : temp_0_i_i_i_059_i_2_fu_923_p3);

assign temp_0_i_i_i_059_i_4_fu_950_p3 = ((tmp_223_1_2_i_fu_945_p2[0:0] === 1'b1) ? src_kernel_win_0_va_7_reg_1243 : temp_0_i_i_i_059_i_3_fu_937_p3);

assign temp_0_i_i_i_059_i_5_fu_980_p3 = ((tmp_223_2_i_fu_975_p2[0:0] === 1'b1) ? src_kernel_win_0_va_1_fu_158 : temp_0_i_i_i_059_i_4_reg_1265);

assign temp_0_i_i_i_059_i_6_fu_993_p3 = ((tmp_223_2_1_i_fu_987_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_154 : temp_0_i_i_i_059_i_5_fu_980_p3);

assign temp_0_i_i_i_059_i_s_fu_879_p3 = ((tmp_223_0_1_i_fu_873_p2[0:0] === 1'b1) ? src_kernel_win_0_va_4_fu_170 : src_kernel_win_0_va_5_fu_174);

assign tmp_147_not_i_fu_376_p2 = (tmp_20_i_fu_371_p2 ^ 1'd1);

assign tmp_177_2_i_fu_404_p2 = ((t_V_reg_274 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_17_i_fu_318_p2 = (11'd2 + stop_row_fu_296_p1);

assign tmp_18_i_fu_328_p2 = ($signed(11'd2047) + $signed(cols_3_fu_300_p1));

assign tmp_204_1_i_fu_491_p2 = (($signed(p_assign_4_1_i_fu_471_p2) < $signed(len_assign_5_cast1_i_fu_304_p1)) ? 1'b1 : 1'b0);

assign tmp_204_2_i_fu_530_p2 = (($signed(p_assign_4_2_i_fu_510_p2) < $signed(len_assign_5_cast1_i_fu_304_p1)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_371_p2 = ((t_V_reg_274 < stop_row_fu_296_p1) ? 1'b1 : 1'b0);

assign tmp_223_0_1_i_fu_873_p2 = ((src_kernel_win_0_va_4_fu_170 > src_kernel_win_0_va_5_fu_174) ? 1'b1 : 1'b0);

assign tmp_223_0_2_i_fu_887_p2 = ((src_kernel_win_0_va_8_fu_860_p3 > temp_0_i_i_i_059_i_s_fu_879_p3) ? 1'b1 : 1'b0);

assign tmp_223_1_1_i_fu_931_p2 = ((src_kernel_win_0_va_2_fu_162 > temp_0_i_i_i_059_i_2_fu_923_p3) ? 1'b1 : 1'b0);

assign tmp_223_1_2_i_fu_945_p2 = ((src_kernel_win_0_va_7_reg_1243 > temp_0_i_i_i_059_i_3_fu_937_p3) ? 1'b1 : 1'b0);

assign tmp_223_1_i_fu_917_p2 = ((src_kernel_win_0_va_3_fu_166 > temp_0_i_i_i_059_i_1_fu_912_p3) ? 1'b1 : 1'b0);

assign tmp_223_2_1_i_fu_987_p2 = ((src_kernel_win_0_va_fu_154 > temp_0_i_i_i_059_i_5_fu_980_p3) ? 1'b1 : 1'b0);

assign tmp_223_2_2_i_fu_1001_p2 = ((ap_reg_pp0_iter2_src_kernel_win_0_va_6_reg_1236 > temp_0_i_i_i_059_i_6_fu_993_p3) ? 1'b1 : 1'b0);

assign tmp_223_2_i_fu_975_p2 = ((src_kernel_win_0_va_1_fu_158 > temp_0_i_i_i_059_i_4_reg_1265) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_398_p2 = ((t_V_reg_274 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_23_fu_334_p1 = rows[1:0];

assign tmp_23_i_fu_410_p2 = ((t_V_reg_274 > stop_row_fu_296_p1) ? 1'b1 : 1'b0);

assign tmp_24_fu_382_p4 = {{t_V_reg_274[10:1]}};

assign tmp_24_i_fu_415_p2 = ($signed(12'd4095) + $signed(t_V_cast_i_fu_356_p1));

assign tmp_25_fu_427_p3 = tmp_24_i_fu_415_p2[32'd11];

assign tmp_26_cast_i_fu_421_p2 = (11'd3 + t_V_reg_274);

assign tmp_26_fu_452_p3 = tmp_24_i_fu_415_p2[32'd11];

assign tmp_26_i_fu_441_p2 = (($signed(tmp_24_i_fu_415_p2) < $signed(len_assign_5_cast1_i_fu_304_p1)) ? 1'b1 : 1'b0);

assign tmp_27_fu_467_p1 = t_V_reg_274[1:0];

assign tmp_28_fu_477_p3 = p_assign_4_1_i_fu_471_p2[32'd11];

assign tmp_29_fu_502_p3 = p_assign_4_1_i_fu_471_p2[32'd11];

assign tmp_30_fu_516_p3 = p_assign_4_2_i_fu_510_p2[32'd11];

assign tmp_31_fu_541_p3 = p_assign_4_2_i_fu_510_p2[32'd11];

assign tmp_31_i_fu_675_p2 = (($signed(ImagLoc_x_fu_649_p2) < $signed(cols_assign_cast_i_fu_308_p1)) ? 1'b1 : 1'b0);

assign tmp_32_fu_562_p1 = row_assign_7_i_fu_557_p2[1:0];

assign tmp_33_fu_633_p4 = {{t_V_5_reg_285[10:1]}};

assign tmp_33_i_fu_718_p1 = x_fu_701_p3;

assign tmp_34_fu_661_p3 = ImagLoc_x_fu_649_p2[32'd11];

assign tmp_35_fu_686_p3 = ImagLoc_x_fu_649_p2[32'd11];

assign tmp_36_fu_709_p1 = x_fu_701_p3[1:0];

assign tmp_37_i_fu_350_p2 = ($signed(2'd3) + $signed(tmp_fu_324_p1));

assign tmp_39_fu_1006_p3 = ((tmp_223_2_2_i_fu_1001_p2[0:0] === 1'b1) ? ap_reg_pp0_iter2_src_kernel_win_0_va_6_reg_1236 : temp_0_i_i_i_059_i_6_fu_993_p3);

assign tmp_39_i_fu_566_p2 = (tmp_27_fu_467_p1 ^ 2'd2);

assign tmp_40_i_fu_572_p3 = ((tmp_29_fu_502_p3[0:0] === 1'b1) ? 2'd0 : tmp_i_74_fu_344_p2);

assign tmp_43_i_fu_579_p3 = ((or_cond_i423_i_i_1_i_fu_496_p2[0:0] === 1'b1) ? tmp_39_i_fu_566_p2 : tmp_40_i_fu_572_p3);

assign tmp_47_i_fu_592_p2 = (2'd1 + tmp_27_fu_467_p1);

assign tmp_48_i_fu_598_p3 = ((tmp_31_fu_541_p3[0:0] === 1'b1) ? 2'd0 : tmp_i_74_fu_344_p2);

assign tmp_49_i_fu_605_p3 = ((or_cond_i423_i_i_2_i_fu_535_p2[0:0] === 1'b1) ? tmp_47_i_fu_592_p2 : tmp_48_i_fu_598_p3);

assign tmp_fu_324_p1 = cols[1:0];

assign tmp_i_74_fu_344_p2 = ($signed(2'd3) + $signed(tmp_23_fu_334_p1));

assign tmp_i_fu_312_p2 = (11'd2 + cols_3_fu_300_p1);

assign x_fu_701_p3 = ((or_cond_i_i_i_i_fu_680_p2[0:0] === 1'b1) ? ImagLoc_x_cast_i_fu_655_p2 : p_assign_1_i_fu_694_p3);

assign y_1_i_fu_549_p3 = ((or_cond_i423_i_i_i_fu_446_p2[0:0] === 1'b1) ? tmp_26_cast_i_fu_421_p2 : p_assign_5_i_fu_460_p3);

endmodule //Dilate
