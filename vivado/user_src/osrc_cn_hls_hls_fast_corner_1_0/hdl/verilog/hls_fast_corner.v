// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_fast_corner,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.582375,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=61,HLS_SYN_DSP=3,HLS_SYN_FF=11295,HLS_SYN_LUT=15792}" *)

module hls_fast_corner (
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        rows,
        cols,
        threhold,
        ap_clk,
        ap_rst_n,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        ap_start,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [31:0] INPUT_STREAM_TDATA;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;
input  [31:0] rows;
input  [31:0] cols;
input  [31:0] threhold;
input   ap_clk;
input   ap_rst_n;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input   ap_start;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

reg    ap_rst_n_inv;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
wire   [7:0] AXIvideo2Mat_U0_p_src_data_stream_0_s_din;
wire    AXIvideo2Mat_U0_p_src_data_stream_0_s_write;
wire   [7:0] AXIvideo2Mat_U0_p_src_data_stream_1_s_din;
wire    AXIvideo2Mat_U0_p_src_data_stream_1_s_write;
wire   [7:0] AXIvideo2Mat_U0_p_src_data_stream_2_s_din;
wire    AXIvideo2Mat_U0_p_src_data_stream_2_s_write;
wire    Duplicate_U0_ap_start;
wire    Duplicate_U0_ap_done;
wire    Duplicate_U0_ap_continue;
wire    Duplicate_U0_ap_idle;
wire    Duplicate_U0_ap_ready;
wire    Duplicate_U0_p_src_data_stream_0_s_read;
wire    Duplicate_U0_p_src_data_stream_1_s_read;
wire    Duplicate_U0_p_src_data_stream_2_s_read;
wire   [7:0] Duplicate_U0_src0_data_stream_0_s_din;
wire    Duplicate_U0_src0_data_stream_0_s_write;
wire   [7:0] Duplicate_U0_src0_data_stream_1_s_din;
wire    Duplicate_U0_src0_data_stream_1_s_write;
wire   [7:0] Duplicate_U0_src0_data_stream_2_s_din;
wire    Duplicate_U0_src0_data_stream_2_s_write;
wire   [7:0] Duplicate_U0_src1_data_stream_0_s_din;
wire    Duplicate_U0_src1_data_stream_0_s_write;
wire   [7:0] Duplicate_U0_src1_data_stream_1_s_din;
wire    Duplicate_U0_src1_data_stream_1_s_write;
wire   [7:0] Duplicate_U0_src1_data_stream_2_s_din;
wire    Duplicate_U0_src1_data_stream_2_s_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_src0_data_stream_0_s_read;
wire    CvtColor_U0_src0_data_stream_1_s_read;
wire    CvtColor_U0_src0_data_stream_2_s_read;
wire   [7:0] CvtColor_U0_gray_data_stream_0_s_din;
wire    CvtColor_U0_gray_data_stream_0_s_write;
wire    FAST_t_opr_U0_ap_start;
wire    FAST_t_opr_U0_ap_done;
wire    FAST_t_opr_U0_ap_continue;
wire    FAST_t_opr_U0_ap_idle;
wire    FAST_t_opr_U0_ap_ready;
wire    FAST_t_opr_U0_gray_data_stream_0_s_read;
wire   [7:0] FAST_t_opr_U0_mask_data_stream_0_s_din;
wire    FAST_t_opr_U0_mask_data_stream_0_s_write;
wire    Dilate_U0_ap_start;
wire    Dilate_U0_ap_done;
wire    Dilate_U0_ap_continue;
wire    Dilate_U0_ap_idle;
wire    Dilate_U0_ap_ready;
wire    Dilate_U0_mask_data_stream_0_s_read;
wire   [7:0] Dilate_U0_dmask_data_stream_0_din;
wire    Dilate_U0_dmask_data_stream_0_write;
wire    PaintMask_U0_ap_start;
wire    PaintMask_U0_ap_done;
wire    PaintMask_U0_ap_continue;
wire    PaintMask_U0_ap_idle;
wire    PaintMask_U0_ap_ready;
wire    PaintMask_U0_src1_data_stream_0_s_read;
wire    PaintMask_U0_src1_data_stream_1_s_read;
wire    PaintMask_U0_src1_data_stream_2_s_read;
wire    PaintMask_U0_dmask_data_stream_0_read;
wire   [7:0] PaintMask_U0_p_dst_data_stream_0_s_din;
wire    PaintMask_U0_p_dst_data_stream_0_s_write;
wire   [7:0] PaintMask_U0_p_dst_data_stream_1_s_din;
wire    PaintMask_U0_p_dst_data_stream_1_s_write;
wire   [7:0] PaintMask_U0_p_dst_data_stream_2_s_din;
wire    PaintMask_U0_p_dst_data_stream_2_s_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_p_dst_data_stream_0_s_read;
wire    Mat2AXIvideo_U0_p_dst_data_stream_1_s_read;
wire    Mat2AXIvideo_U0_p_dst_data_stream_2_s_read;
wire   [31:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
wire    Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
wire   [3:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
wire   [3:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
wire   [0:0] Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
wire    ap_sync_continue;
wire    p_src_data_stream_0_s_full_n;
wire   [7:0] p_src_data_stream_0_s_dout;
wire    p_src_data_stream_0_s_empty_n;
wire    p_src_data_stream_1_s_full_n;
wire   [7:0] p_src_data_stream_1_s_dout;
wire    p_src_data_stream_1_s_empty_n;
wire    p_src_data_stream_2_s_full_n;
wire   [7:0] p_src_data_stream_2_s_dout;
wire    p_src_data_stream_2_s_empty_n;
wire    src0_data_stream_0_s_full_n;
wire   [7:0] src0_data_stream_0_s_dout;
wire    src0_data_stream_0_s_empty_n;
wire    src0_data_stream_1_s_full_n;
wire   [7:0] src0_data_stream_1_s_dout;
wire    src0_data_stream_1_s_empty_n;
wire    src0_data_stream_2_s_full_n;
wire   [7:0] src0_data_stream_2_s_dout;
wire    src0_data_stream_2_s_empty_n;
wire    src1_data_stream_0_s_full_n;
wire   [7:0] src1_data_stream_0_s_dout;
wire    src1_data_stream_0_s_empty_n;
wire    src1_data_stream_1_s_full_n;
wire   [7:0] src1_data_stream_1_s_dout;
wire    src1_data_stream_1_s_empty_n;
wire    src1_data_stream_2_s_full_n;
wire   [7:0] src1_data_stream_2_s_dout;
wire    src1_data_stream_2_s_empty_n;
wire    gray_data_stream_0_s_full_n;
wire   [7:0] gray_data_stream_0_s_dout;
wire    gray_data_stream_0_s_empty_n;
wire    mask_data_stream_0_s_full_n;
wire   [7:0] mask_data_stream_0_s_dout;
wire    mask_data_stream_0_s_empty_n;
wire    dmask_data_stream_0_full_n;
wire   [7:0] dmask_data_stream_0_dout;
wire    dmask_data_stream_0_empty_n;
wire    p_dst_data_stream_0_s_full_n;
wire   [7:0] p_dst_data_stream_0_s_dout;
wire    p_dst_data_stream_0_s_empty_n;
wire    p_dst_data_stream_1_s_full_n;
wire   [7:0] p_dst_data_stream_1_s_dout;
wire    p_dst_data_stream_1_s_empty_n;
wire    p_dst_data_stream_2_s_full_n;
wire   [7:0] p_dst_data_stream_2_s_dout;
wire    p_dst_data_stream_2_s_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    AXIvideo2Mat_U0_start_full_n;
wire    AXIvideo2Mat_U0_start_write;
wire    Duplicate_U0_start_full_n;
wire    Duplicate_U0_start_write;
wire    CvtColor_U0_start_full_n;
wire    CvtColor_U0_start_write;
wire    FAST_t_opr_U0_start_full_n;
wire    FAST_t_opr_U0_start_write;
wire    Dilate_U0_start_full_n;
wire    Dilate_U0_start_write;
wire    PaintMask_U0_start_full_n;
wire    PaintMask_U0_start_write;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID),
    .INPUT_STREAM_TREADY(AXIvideo2Mat_U0_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST),
    .INPUT_STREAM_TID(INPUT_STREAM_TID),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST),
    .rows(rows),
    .cols(cols),
    .p_src_data_stream_0_s_din(AXIvideo2Mat_U0_p_src_data_stream_0_s_din),
    .p_src_data_stream_0_s_full_n(p_src_data_stream_0_s_full_n),
    .p_src_data_stream_0_s_write(AXIvideo2Mat_U0_p_src_data_stream_0_s_write),
    .p_src_data_stream_1_s_din(AXIvideo2Mat_U0_p_src_data_stream_1_s_din),
    .p_src_data_stream_1_s_full_n(p_src_data_stream_1_s_full_n),
    .p_src_data_stream_1_s_write(AXIvideo2Mat_U0_p_src_data_stream_1_s_write),
    .p_src_data_stream_2_s_din(AXIvideo2Mat_U0_p_src_data_stream_2_s_din),
    .p_src_data_stream_2_s_full_n(p_src_data_stream_2_s_full_n),
    .p_src_data_stream_2_s_write(AXIvideo2Mat_U0_p_src_data_stream_2_s_write)
);

Duplicate Duplicate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Duplicate_U0_ap_start),
    .ap_done(Duplicate_U0_ap_done),
    .ap_continue(Duplicate_U0_ap_continue),
    .ap_idle(Duplicate_U0_ap_idle),
    .ap_ready(Duplicate_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .p_src_data_stream_0_s_dout(p_src_data_stream_0_s_dout),
    .p_src_data_stream_0_s_empty_n(p_src_data_stream_0_s_empty_n),
    .p_src_data_stream_0_s_read(Duplicate_U0_p_src_data_stream_0_s_read),
    .p_src_data_stream_1_s_dout(p_src_data_stream_1_s_dout),
    .p_src_data_stream_1_s_empty_n(p_src_data_stream_1_s_empty_n),
    .p_src_data_stream_1_s_read(Duplicate_U0_p_src_data_stream_1_s_read),
    .p_src_data_stream_2_s_dout(p_src_data_stream_2_s_dout),
    .p_src_data_stream_2_s_empty_n(p_src_data_stream_2_s_empty_n),
    .p_src_data_stream_2_s_read(Duplicate_U0_p_src_data_stream_2_s_read),
    .src0_data_stream_0_s_din(Duplicate_U0_src0_data_stream_0_s_din),
    .src0_data_stream_0_s_full_n(src0_data_stream_0_s_full_n),
    .src0_data_stream_0_s_write(Duplicate_U0_src0_data_stream_0_s_write),
    .src0_data_stream_1_s_din(Duplicate_U0_src0_data_stream_1_s_din),
    .src0_data_stream_1_s_full_n(src0_data_stream_1_s_full_n),
    .src0_data_stream_1_s_write(Duplicate_U0_src0_data_stream_1_s_write),
    .src0_data_stream_2_s_din(Duplicate_U0_src0_data_stream_2_s_din),
    .src0_data_stream_2_s_full_n(src0_data_stream_2_s_full_n),
    .src0_data_stream_2_s_write(Duplicate_U0_src0_data_stream_2_s_write),
    .src1_data_stream_0_s_din(Duplicate_U0_src1_data_stream_0_s_din),
    .src1_data_stream_0_s_full_n(src1_data_stream_0_s_full_n),
    .src1_data_stream_0_s_write(Duplicate_U0_src1_data_stream_0_s_write),
    .src1_data_stream_1_s_din(Duplicate_U0_src1_data_stream_1_s_din),
    .src1_data_stream_1_s_full_n(src1_data_stream_1_s_full_n),
    .src1_data_stream_1_s_write(Duplicate_U0_src1_data_stream_1_s_write),
    .src1_data_stream_2_s_din(Duplicate_U0_src1_data_stream_2_s_din),
    .src1_data_stream_2_s_full_n(src1_data_stream_2_s_full_n),
    .src1_data_stream_2_s_write(Duplicate_U0_src1_data_stream_2_s_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_U0_ap_start),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .src0_data_stream_0_s_dout(src0_data_stream_0_s_dout),
    .src0_data_stream_0_s_empty_n(src0_data_stream_0_s_empty_n),
    .src0_data_stream_0_s_read(CvtColor_U0_src0_data_stream_0_s_read),
    .src0_data_stream_1_s_dout(src0_data_stream_1_s_dout),
    .src0_data_stream_1_s_empty_n(src0_data_stream_1_s_empty_n),
    .src0_data_stream_1_s_read(CvtColor_U0_src0_data_stream_1_s_read),
    .src0_data_stream_2_s_dout(src0_data_stream_2_s_dout),
    .src0_data_stream_2_s_empty_n(src0_data_stream_2_s_empty_n),
    .src0_data_stream_2_s_read(CvtColor_U0_src0_data_stream_2_s_read),
    .gray_data_stream_0_s_din(CvtColor_U0_gray_data_stream_0_s_din),
    .gray_data_stream_0_s_full_n(gray_data_stream_0_s_full_n),
    .gray_data_stream_0_s_write(CvtColor_U0_gray_data_stream_0_s_write)
);

FAST_t_opr FAST_t_opr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FAST_t_opr_U0_ap_start),
    .ap_done(FAST_t_opr_U0_ap_done),
    .ap_continue(FAST_t_opr_U0_ap_continue),
    .ap_idle(FAST_t_opr_U0_ap_idle),
    .ap_ready(FAST_t_opr_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .gray_data_stream_0_s_dout(gray_data_stream_0_s_dout),
    .gray_data_stream_0_s_empty_n(gray_data_stream_0_s_empty_n),
    .gray_data_stream_0_s_read(FAST_t_opr_U0_gray_data_stream_0_s_read),
    .mask_data_stream_0_s_din(FAST_t_opr_U0_mask_data_stream_0_s_din),
    .mask_data_stream_0_s_full_n(mask_data_stream_0_s_full_n),
    .mask_data_stream_0_s_write(FAST_t_opr_U0_mask_data_stream_0_s_write),
    .threhold(threhold)
);

Dilate Dilate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Dilate_U0_ap_start),
    .ap_done(Dilate_U0_ap_done),
    .ap_continue(Dilate_U0_ap_continue),
    .ap_idle(Dilate_U0_ap_idle),
    .ap_ready(Dilate_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .mask_data_stream_0_s_dout(mask_data_stream_0_s_dout),
    .mask_data_stream_0_s_empty_n(mask_data_stream_0_s_empty_n),
    .mask_data_stream_0_s_read(Dilate_U0_mask_data_stream_0_s_read),
    .dmask_data_stream_0_din(Dilate_U0_dmask_data_stream_0_din),
    .dmask_data_stream_0_full_n(dmask_data_stream_0_full_n),
    .dmask_data_stream_0_write(Dilate_U0_dmask_data_stream_0_write)
);

PaintMask PaintMask_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(PaintMask_U0_ap_start),
    .ap_done(PaintMask_U0_ap_done),
    .ap_continue(PaintMask_U0_ap_continue),
    .ap_idle(PaintMask_U0_ap_idle),
    .ap_ready(PaintMask_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .src1_data_stream_0_s_dout(src1_data_stream_0_s_dout),
    .src1_data_stream_0_s_empty_n(src1_data_stream_0_s_empty_n),
    .src1_data_stream_0_s_read(PaintMask_U0_src1_data_stream_0_s_read),
    .src1_data_stream_1_s_dout(src1_data_stream_1_s_dout),
    .src1_data_stream_1_s_empty_n(src1_data_stream_1_s_empty_n),
    .src1_data_stream_1_s_read(PaintMask_U0_src1_data_stream_1_s_read),
    .src1_data_stream_2_s_dout(src1_data_stream_2_s_dout),
    .src1_data_stream_2_s_empty_n(src1_data_stream_2_s_empty_n),
    .src1_data_stream_2_s_read(PaintMask_U0_src1_data_stream_2_s_read),
    .dmask_data_stream_0_dout(dmask_data_stream_0_dout),
    .dmask_data_stream_0_empty_n(dmask_data_stream_0_empty_n),
    .dmask_data_stream_0_read(PaintMask_U0_dmask_data_stream_0_read),
    .p_dst_data_stream_0_s_din(PaintMask_U0_p_dst_data_stream_0_s_din),
    .p_dst_data_stream_0_s_full_n(p_dst_data_stream_0_s_full_n),
    .p_dst_data_stream_0_s_write(PaintMask_U0_p_dst_data_stream_0_s_write),
    .p_dst_data_stream_1_s_din(PaintMask_U0_p_dst_data_stream_1_s_din),
    .p_dst_data_stream_1_s_full_n(p_dst_data_stream_1_s_full_n),
    .p_dst_data_stream_1_s_write(PaintMask_U0_p_dst_data_stream_1_s_write),
    .p_dst_data_stream_2_s_din(PaintMask_U0_p_dst_data_stream_2_s_din),
    .p_dst_data_stream_2_s_full_n(p_dst_data_stream_2_s_full_n),
    .p_dst_data_stream_2_s_write(PaintMask_U0_p_dst_data_stream_2_s_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .p_dst_data_stream_0_s_dout(p_dst_data_stream_0_s_dout),
    .p_dst_data_stream_0_s_empty_n(p_dst_data_stream_0_s_empty_n),
    .p_dst_data_stream_0_s_read(Mat2AXIvideo_U0_p_dst_data_stream_0_s_read),
    .p_dst_data_stream_1_s_dout(p_dst_data_stream_1_s_dout),
    .p_dst_data_stream_1_s_empty_n(p_dst_data_stream_1_s_empty_n),
    .p_dst_data_stream_1_s_read(Mat2AXIvideo_U0_p_dst_data_stream_1_s_read),
    .p_dst_data_stream_2_s_dout(p_dst_data_stream_2_s_dout),
    .p_dst_data_stream_2_s_empty_n(p_dst_data_stream_2_s_empty_n),
    .p_dst_data_stream_2_s_read(Mat2AXIvideo_U0_p_dst_data_stream_2_s_read),
    .OUTPUT_STREAM_TDATA(Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TREADY(OUTPUT_STREAM_TREADY),
    .OUTPUT_STREAM_TKEEP(Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(Mat2AXIvideo_U0_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST)
);

fifo_w8_d1_A p_src_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_p_src_data_stream_0_s_din),
    .if_full_n(p_src_data_stream_0_s_full_n),
    .if_write(AXIvideo2Mat_U0_p_src_data_stream_0_s_write),
    .if_dout(p_src_data_stream_0_s_dout),
    .if_empty_n(p_src_data_stream_0_s_empty_n),
    .if_read(Duplicate_U0_p_src_data_stream_0_s_read)
);

fifo_w8_d1_A p_src_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_p_src_data_stream_1_s_din),
    .if_full_n(p_src_data_stream_1_s_full_n),
    .if_write(AXIvideo2Mat_U0_p_src_data_stream_1_s_write),
    .if_dout(p_src_data_stream_1_s_dout),
    .if_empty_n(p_src_data_stream_1_s_empty_n),
    .if_read(Duplicate_U0_p_src_data_stream_1_s_read)
);

fifo_w8_d1_A p_src_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_p_src_data_stream_2_s_din),
    .if_full_n(p_src_data_stream_2_s_full_n),
    .if_write(AXIvideo2Mat_U0_p_src_data_stream_2_s_write),
    .if_dout(p_src_data_stream_2_s_dout),
    .if_empty_n(p_src_data_stream_2_s_empty_n),
    .if_read(Duplicate_U0_p_src_data_stream_2_s_read)
);

fifo_w8_d1_A src0_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src0_data_stream_0_s_din),
    .if_full_n(src0_data_stream_0_s_full_n),
    .if_write(Duplicate_U0_src0_data_stream_0_s_write),
    .if_dout(src0_data_stream_0_s_dout),
    .if_empty_n(src0_data_stream_0_s_empty_n),
    .if_read(CvtColor_U0_src0_data_stream_0_s_read)
);

fifo_w8_d1_A src0_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src0_data_stream_1_s_din),
    .if_full_n(src0_data_stream_1_s_full_n),
    .if_write(Duplicate_U0_src0_data_stream_1_s_write),
    .if_dout(src0_data_stream_1_s_dout),
    .if_empty_n(src0_data_stream_1_s_empty_n),
    .if_read(CvtColor_U0_src0_data_stream_1_s_read)
);

fifo_w8_d1_A src0_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src0_data_stream_2_s_din),
    .if_full_n(src0_data_stream_2_s_full_n),
    .if_write(Duplicate_U0_src0_data_stream_2_s_write),
    .if_dout(src0_data_stream_2_s_dout),
    .if_empty_n(src0_data_stream_2_s_empty_n),
    .if_read(CvtColor_U0_src0_data_stream_2_s_read)
);

fifo_w8_d20000_A src1_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src1_data_stream_0_s_din),
    .if_full_n(src1_data_stream_0_s_full_n),
    .if_write(Duplicate_U0_src1_data_stream_0_s_write),
    .if_dout(src1_data_stream_0_s_dout),
    .if_empty_n(src1_data_stream_0_s_empty_n),
    .if_read(PaintMask_U0_src1_data_stream_0_s_read)
);

fifo_w8_d20000_A src1_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src1_data_stream_1_s_din),
    .if_full_n(src1_data_stream_1_s_full_n),
    .if_write(Duplicate_U0_src1_data_stream_1_s_write),
    .if_dout(src1_data_stream_1_s_dout),
    .if_empty_n(src1_data_stream_1_s_empty_n),
    .if_read(PaintMask_U0_src1_data_stream_1_s_read)
);

fifo_w8_d20000_A src1_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Duplicate_U0_src1_data_stream_2_s_din),
    .if_full_n(src1_data_stream_2_s_full_n),
    .if_write(Duplicate_U0_src1_data_stream_2_s_write),
    .if_dout(src1_data_stream_2_s_dout),
    .if_empty_n(src1_data_stream_2_s_empty_n),
    .if_read(PaintMask_U0_src1_data_stream_2_s_read)
);

fifo_w8_d1_A gray_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_gray_data_stream_0_s_din),
    .if_full_n(gray_data_stream_0_s_full_n),
    .if_write(CvtColor_U0_gray_data_stream_0_s_write),
    .if_dout(gray_data_stream_0_s_dout),
    .if_empty_n(gray_data_stream_0_s_empty_n),
    .if_read(FAST_t_opr_U0_gray_data_stream_0_s_read)
);

fifo_w8_d1_A mask_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FAST_t_opr_U0_mask_data_stream_0_s_din),
    .if_full_n(mask_data_stream_0_s_full_n),
    .if_write(FAST_t_opr_U0_mask_data_stream_0_s_write),
    .if_dout(mask_data_stream_0_s_dout),
    .if_empty_n(mask_data_stream_0_s_empty_n),
    .if_read(Dilate_U0_mask_data_stream_0_s_read)
);

fifo_w8_d1_A dmask_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Dilate_U0_dmask_data_stream_0_din),
    .if_full_n(dmask_data_stream_0_full_n),
    .if_write(Dilate_U0_dmask_data_stream_0_write),
    .if_dout(dmask_data_stream_0_dout),
    .if_empty_n(dmask_data_stream_0_empty_n),
    .if_read(PaintMask_U0_dmask_data_stream_0_read)
);

fifo_w8_d1_A p_dst_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_0_s_din),
    .if_full_n(p_dst_data_stream_0_s_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_0_s_write),
    .if_dout(p_dst_data_stream_0_s_dout),
    .if_empty_n(p_dst_data_stream_0_s_empty_n),
    .if_read(Mat2AXIvideo_U0_p_dst_data_stream_0_s_read)
);

fifo_w8_d1_A p_dst_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_1_s_din),
    .if_full_n(p_dst_data_stream_1_s_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_1_s_write),
    .if_dout(p_dst_data_stream_1_s_dout),
    .if_empty_n(p_dst_data_stream_1_s_empty_n),
    .if_read(Mat2AXIvideo_U0_p_dst_data_stream_1_s_read)
);

fifo_w8_d1_A p_dst_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(PaintMask_U0_p_dst_data_stream_2_s_din),
    .if_full_n(p_dst_data_stream_2_s_full_n),
    .if_write(PaintMask_U0_p_dst_data_stream_2_s_write),
    .if_dout(p_dst_data_stream_2_s_dout),
    .if_empty_n(p_dst_data_stream_2_s_empty_n),
    .if_read(Mat2AXIvideo_U0_p_dst_data_stream_2_s_read)
);

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ap_start;

assign AXIvideo2Mat_U0_start_full_n = 1'b1;

assign AXIvideo2Mat_U0_start_write = 1'b0;

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = ap_start;

assign CvtColor_U0_start_full_n = 1'b1;

assign CvtColor_U0_start_write = 1'b0;

assign Dilate_U0_ap_continue = 1'b1;

assign Dilate_U0_ap_start = ap_start;

assign Dilate_U0_start_full_n = 1'b1;

assign Dilate_U0_start_write = 1'b0;

assign Duplicate_U0_ap_continue = 1'b1;

assign Duplicate_U0_ap_start = ap_start;

assign Duplicate_U0_start_full_n = 1'b1;

assign Duplicate_U0_start_write = 1'b0;

assign FAST_t_opr_U0_ap_continue = 1'b1;

assign FAST_t_opr_U0_ap_start = ap_start;

assign FAST_t_opr_U0_start_full_n = 1'b1;

assign FAST_t_opr_U0_start_write = 1'b0;

assign INPUT_STREAM_TREADY = AXIvideo2Mat_U0_INPUT_STREAM_TREADY;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = ap_start;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign OUTPUT_STREAM_TDATA = Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;

assign OUTPUT_STREAM_TDEST = Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;

assign OUTPUT_STREAM_TID = Mat2AXIvideo_U0_OUTPUT_STREAM_TID;

assign OUTPUT_STREAM_TKEEP = Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;

assign OUTPUT_STREAM_TLAST = Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;

assign OUTPUT_STREAM_TSTRB = Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;

assign OUTPUT_STREAM_TUSER = Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;

assign OUTPUT_STREAM_TVALID = Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;

assign PaintMask_U0_ap_continue = 1'b1;

assign PaintMask_U0_ap_start = ap_start;

assign PaintMask_U0_start_full_n = 1'b1;

assign PaintMask_U0_start_write = 1'b0;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (PaintMask_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & FAST_t_opr_U0_ap_idle & Duplicate_U0_ap_idle & Dilate_U0_ap_idle & CvtColor_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = AXIvideo2Mat_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = AXIvideo2Mat_U0_ap_ready;

endmodule //hls_fast_corner
